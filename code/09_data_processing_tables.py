# script to create summary tables from processed data

import pandas as pd

FILE_RESULTS = "../data/07_Price_data/markets_combined_cookedresults_df_priced.csv"

DIR_OUTPUT = "../data/09_data_processing_tables_output/"

# load processed results data
df_results = pd.read_csv(FILE_RESULTS, sep=";")

# Create mapping dictionary for category full names
category_mapping = {
    'AgriForeAnim': 'Agriculture, forestry, live animals & their products',
    'Chemical': 'Chemical products', 
    'GlasNonMetal': 'Glass and other non-metallic products',
    'MachElecTrans': 'Machinery, metal/electronic, transport equipment',
    'MetalAlloy': 'Basic metals & alloys, incl. semi-finished products',
    'OreMinFuel': 'Ores, minerals & fuels',
    'PlastRub': 'Plastics & rubber products',
    'ProcBio': 'Processed biobased products'
}

# Add the full category name column
df_results['Category Full Name'] = df_results['Category'].map(category_mapping)

# get statistics about the categories
df_category_stats = df_results[df_results["Database"] == "ecoinvent-default-2020"]
category_stats = df_category_stats["Category"].value_counts()
# sort alphabetically by category name
category_stats = pd.DataFrame(category_stats.sort_index())
# add column with full names of categories alongside short codes
category_stats["Category Full Name"] = category_stats.index.map(category_mapping)
category_stats.reset_index(inplace=True)
# rename columns
category_stats.rename(columns={"Category Full Name": "Category full name", "Category": "Abbreviated name", "Count" : "# of activities"}, inplace=True)

category_stats = category_stats[["Category full name","Abbreviated name", "# of activities"]]

category_stats.to_csv(DIR_OUTPUT + "category_statistics.csv", sep=";", index=False)

# get summary statistics for waste generated by category
# i.e mean, std, min, max waste generated per category

df_waste_stats = df_results[df_results["Database"] == "ecoinvent-default-2020"]
waste_stats = df_waste_stats.groupby("Category")["Waste - Total"].agg(
    ["mean", "std", "min", "max", "count"]
)

waste_stats.to_csv(DIR_OUTPUT + "waste_statistics_by_category.csv", sep="
